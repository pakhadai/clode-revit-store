"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –≤—Å—ñ—Ö —Ç–∞–±–ª–∏—Ü—å –≤ –ë–î
–ó–∞–ø—É—Å—Ç—ñ—Ç—å: python init_db.py
"""

import sys
import os

# –î–æ–¥–∞—î–º–æ —à–ª—è—Ö –¥–æ –ø—Ä–æ–µ–∫—Ç—É
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from app.database import engine, Base, init_db

# –Ü–º–ø–æ—Ä—Ç—É—î–º–æ –≤—Å—ñ –º–æ–¥–µ–ª—ñ
from app.models import user, product, order, subscription

print("üî® –°—Ç–≤–æ—Ä—é—é —Ç–∞–±–ª–∏—Ü—ñ –≤ –±–∞–∑—ñ –¥–∞–Ω–∏—Ö...")

try:
    # –°—Ç–≤–æ—Ä—é—î–º–æ —Ç–∞–±–ª–∏—Ü—ñ
    Base.metadata.create_all(bind=engine)
    print("‚úÖ –í—Å—ñ —Ç–∞–±–ª–∏—Ü—ñ —Å—Ç–≤–æ—Ä–µ–Ω–æ —É—Å–ø—ñ—à–Ω–æ!")
    print("üìÅ –ë–∞–∑–∞ –¥–∞–Ω–∏—Ö: ohmyrevit.db")

    # –î–æ–¥–∞—î–º–æ —Ç–µ—Å—Ç–æ–≤—ñ –¥–∞–Ω—ñ
    from app.database import SessionLocal
    from app.models.product import Product
    import json

    db = SessionLocal()

    # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ —î –ø—Ä–æ–¥—É–∫—Ç–∏
    if db.query(Product).count() == 0:
        # –î–æ–¥–∞—î–º–æ —Ç–µ—Å—Ç–æ–≤–∏–π –ø—Ä–æ–¥—É–∫—Ç
        test_product = Product(
            sku="TEST001",
            title=json.dumps({"en": "Test Product", "ua": "–¢–µ—Å—Ç–æ–≤–∏–π –ø—Ä–æ–¥—É–∫—Ç", "ru": "–¢–µ—Å—Ç–æ–≤—ã–π –ø—Ä–æ–¥—É–∫—Ç"}),
            description=json.dumps({"en": "Test description", "ua": "–¢–µ—Å—Ç–æ–≤–∏–π –æ–ø–∏—Å", "ru": "–¢–µ—Å—Ç–æ–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ"}),
            category="free",
            product_type="furniture",
            price=0,
            file_url="https://example.com/file.zip",
            is_active=True,
            is_featured=True,
            is_new=True
        )
        db.add(test_product)
        db.commit()
        print("‚úÖ –î–æ–¥–∞–Ω–æ —Ç–µ—Å—Ç–æ–≤–∏–π –ø—Ä–æ–¥—É–∫—Ç")

    db.close()

except Exception as e:
    print(f"‚ùå –ü–æ–º–∏–ª–∫–∞: {e}")
    sys.exit(1)