"""
–°–µ—Ä–≤—ñ—Å –¥–ª—è —Ä–æ–±–æ—Ç–∏ –∑ Telegram Bot
–í—ñ–¥–ø—Ä–∞–≤–∫–∞ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å —Ç–∞ —Ä–æ–∑—Å–∏–ª–æ–∫
"""

import os
from typing import Optional, List, Dict
from dotenv import load_dotenv

load_dotenv()


class TelegramBotService:
    """
    –°–µ—Ä–≤—ñ—Å –¥–ª—è –≤–∑–∞—î–º–æ–¥—ñ—ó –∑ Telegram Bot API
    """

    def __init__(self):
        self.bot_token = os.getenv("TELEGRAM_BOT_TOKEN", "")

        if not self.bot_token:
            print("‚ö†Ô∏è TELEGRAM_BOT_TOKEN –Ω–µ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–π - —Ä–æ–∑—Å–∏–ª–∫–∏ –Ω–µ –ø—Ä–∞—Ü—é–≤–∞—Ç–∏–º—É—Ç—å")

    async def send_message(
            self,
            telegram_id: int,
            message: str,
            parse_mode: str = "HTML"
    ) -> bool:
        """
        –í—ñ–¥–ø—Ä–∞–≤–∏—Ç–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É

        Args:
            telegram_id: Telegram ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
            message: –¢–µ–∫—Å—Ç –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
            parse_mode: –†–µ–∂–∏–º –ø–∞—Ä—Å–∏–Ω–≥—É (HTML, Markdown)

        Returns:
            True —è–∫—â–æ —É—Å–ø—ñ—à–Ω–æ –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ
        """
        # TODO: –†–µ–∞–ª—ñ–∑—É–≤–∞—Ç–∏ —á–µ—Ä–µ–∑ aiogram –∞–±–æ httpx
        # –ü–æ–∫–∏ —â–æ –ø—Ä–æ—Å—Ç–æ –ª–æ–≥—É—î–º–æ
        print(f"üì® Telegram message to {telegram_id}:")
        print(f"   {message}")

        # –í —Ä–µ–∞–ª—å–Ω—ñ–π —Ä–µ–∞–ª—ñ–∑–∞—Ü—ñ—ó —Ç—É—Ç –±—É–¥–µ:
        # async with httpx.AsyncClient() as client:
        #     response = await client.post(
        #         f"https://api.telegram.org/bot{self.bot_token}/sendMessage",
        #         json={
        #             "chat_id": telegram_id,
        #             "text": message,
        #             "parse_mode": parse_mode
        #         }
        #     )
        #     return response.status_code == 200

        return True

    async def send_photo(
            self,
            telegram_id: int,
            photo_url: str,
            caption: Optional[str] = None
    ) -> bool:
        """
        –í—ñ–¥–ø—Ä–∞–≤–∏—Ç–∏ —Ñ–æ—Ç–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É

        Args:
            telegram_id: Telegram ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
            photo_url: URL —Ñ–æ—Ç–æ
            caption: –ü—ñ–¥–ø–∏—Å –¥–æ —Ñ–æ—Ç–æ

        Returns:
            True —è–∫—â–æ —É—Å–ø—ñ—à–Ω–æ –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ
        """
        print(f"üì∏ Telegram photo to {telegram_id}: {photo_url}")
        if caption:
            print(f"   Caption: {caption}")

        return True

    async def send_document(
            self,
            telegram_id: int,
            document_url: str,
            caption: Optional[str] = None
    ) -> bool:
        """
        –í—ñ–¥–ø—Ä–∞–≤–∏—Ç–∏ –¥–æ–∫—É–º–µ–Ω—Ç –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É

        Args:
            telegram_id: Telegram ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
            document_url: URL –¥–æ–∫—É–º–µ–Ω—Ç–∞
            caption: –ü—ñ–¥–ø–∏—Å –¥–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞

        Returns:
            True —è–∫—â–æ —É—Å–ø—ñ—à–Ω–æ –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ
        """
        print(f"üìÑ Telegram document to {telegram_id}: {document_url}")
        if caption:
            print(f"   Caption: {caption}")

        return True

    async def send_invoice(
            self,
            telegram_id: int,
            title: str,
            description: str,
            payload: str,
            provider_token: str,
            currency: str,
            prices: List[Dict]
    ) -> bool:
        """
        –í—ñ–¥–ø—Ä–∞–≤–∏—Ç–∏ —ñ–Ω–≤–æ–π—Å –¥–ª—è –æ–ø–ª–∞—Ç–∏

        Args:
            telegram_id: Telegram ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
            title: –ù–∞–∑–≤–∞ —Ç–æ–≤–∞—Ä—É
            description: –û–ø–∏—Å
            payload: Payload –¥–ª—è —ñ–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ü—ñ—ó
            provider_token: –¢–æ–∫–µ–Ω –ø–ª–∞—Ç—ñ–∂–Ω–æ–≥–æ –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞
            currency: –í–∞–ª—é—Ç–∞
            prices: –°–ø–∏—Å–æ–∫ —Ü—ñ–Ω

        Returns:
            True —è–∫—â–æ —É—Å–ø—ñ—à–Ω–æ –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ
        """
        print(f"üí≥ Telegram invoice to {telegram_id}: {title}")
        print(f"   Amount: {sum(p.get('amount', 0) for p in prices)} {currency}")

        return True

    async def broadcast(
            self,
            telegram_ids: List[int],
            message: str,
            parse_mode: str = "HTML"
    ) -> Dict:
        """
        –ú–∞—Å–æ–≤–∞ —Ä–æ–∑—Å–∏–ª–∫–∞ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å

        Args:
            telegram_ids: –°–ø–∏—Å–æ–∫ Telegram ID
            message: –¢–µ–∫—Å—Ç –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
            parse_mode: –†–µ–∂–∏–º –ø–∞—Ä—Å–∏–Ω–≥—É

        Returns:
            –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ä–æ–∑—Å–∏–ª–∫–∏
        """
        sent = 0
        failed = 0

        for telegram_id in telegram_ids:
            try:
                success = await self.send_message(telegram_id, message, parse_mode)
                if success:
                    sent += 1
                else:
                    failed += 1
            except Exception as e:
                print(f"‚ùå Failed to send to {telegram_id}: {e}")
                failed += 1

        return {
            "total": len(telegram_ids),
            "sent": sent,
            "failed": failed
        }

    async def set_webhook(self, webhook_url: str) -> bool:
        """
        –í—Å—Ç–∞–Ω–æ–≤–∏—Ç–∏ webhook –¥–ª—è –±–æ—Ç–∞

        Args:
            webhook_url: URL –¥–ª—è webhook

        Returns:
            True —è–∫—â–æ —É—Å–ø—ñ—à–Ω–æ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ
        """
        print(f"üîó Setting webhook: {webhook_url}")

        # TODO: –†–µ–∞–ª—ñ–∑—É–≤–∞—Ç–∏ —á–µ—Ä–µ–∑ API
        # response = await client.post(
        #     f"https://api.telegram.org/bot{self.bot_token}/setWebhook",
        #     json={"url": webhook_url}
        # )

        return True

    async def delete_webhook(self) -> bool:
        """
        –í–∏–¥–∞–ª–∏—Ç–∏ webhook

        Returns:
            True —è–∫—â–æ —É—Å–ø—ñ—à–Ω–æ –≤–∏–¥–∞–ª–µ–Ω–æ
        """
        print("üîó Deleting webhook")

        return True

    async def get_me(self) -> Optional[Dict]:
        """
        –û—Ç—Ä–∏–º–∞—Ç–∏ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –±–æ—Ç–∞

        Returns:
            –Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –±–æ—Ç–∞
        """
        # TODO: –†–µ–∞–ª—ñ–∑—É–≤–∞—Ç–∏ —á–µ—Ä–µ–∑ API
        return {
            "id": 123456789,
            "is_bot": True,
            "first_name": "OhMyRevit Bot",
            "username": "ohmyrevit_bot"
        }


# –°—Ç–≤–æ—Ä—é—î–º–æ –≥–ª–æ–±–∞–ª—å–Ω–∏–π –µ–∫–∑–µ–º–ø–ª—è—Ä —Å–µ—Ä–≤—ñ—Å—É
bot_service = TelegramBotService()

# –ï–∫—Å–ø–æ—Ä—Ç—É—î–º–æ –¥–ª—è –∑—Ä—É—á–Ω–æ—Å—Ç—ñ
__all__ = ['bot_service', 'TelegramBotService']