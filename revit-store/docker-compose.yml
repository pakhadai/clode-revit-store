version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: revit_postgres
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - revit_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: revit_redis
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - revit_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: revit_backend
    env_file:
      - ./.env
    volumes:
      - ./backend:/app
      - revit_media:/app/media
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - revit_network
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload

  # --- ВИПРАВЛЕНО ТУТ ---
  # Nginx тепер буде нашим єдиним входом
  nginx:
    build:
      context: ./frontend # Збираємо фронтенд всередині Nginx
      dockerfile: Dockerfile
    container_name: revit_nginx
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./frontend:/usr/share/nginx/html:ro
      - revit_media:/var/www/media:ro
    ports:
      - "3000:80" # Тепер Nginx слухає порт 3000
    depends_on:
      - backend
    networks:
      - revit_network

volumes:
  postgres_data:
  redis_data:
  revit_media: {}

networks:
  revit_network:
    driver: bridge