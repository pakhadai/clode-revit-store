/**
 * –ú–æ–¥—É–ª—å –¥–ª—è —Ä–æ–±–æ—Ç–∏ –∑ –±–æ–Ω—É—Å–∞–º–∏
 */

class BonusesModule {
    constructor() {
        this.dailyStatus = null;
        this.wheelConfig = null;
        this.wheelStatus = null;
        this.statistics = null;
    }

    /**
     * –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –º–æ–¥—É–ª—è
     */
    async init() {
        try {
            // –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—é –∫–æ–ª–µ—Å–∞
            this.wheelConfig = await api.get('/bonuses/wheel/config');

            // –Ø–∫—â–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–∏–π - –∑–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ —Å—Ç–∞—Ç—É—Å–∏
            if (auth.isAuthenticated()) {
                await this.loadStatuses();
            }
        } catch (error) {
            console.error('Bonuses init error:', error);
        }
    }

    /**
     * –ó–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ —Å—Ç–∞—Ç—É—Å–∏ –±–æ–Ω—É—Å—ñ–≤
     */
    async loadStatuses() {
        try {
            // –ü–∞—Ä–∞–ª–µ–ª—å–Ω–æ –∑–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ –≤—Å—ñ —Å—Ç–∞—Ç—É—Å–∏
            const [dailyStatus, wheelStatus, statistics] = await Promise.all([
                api.get('/bonuses/daily/status'),
                api.get('/bonuses/wheel/status'),
                api.get('/bonuses/statistics')
            ]);

            this.dailyStatus = dailyStatus;
            this.wheelStatus = wheelStatus;
            this.statistics = statistics;

            return {
                daily: this.dailyStatus,
                wheel: this.wheelStatus,
                stats: this.statistics
            };
        } catch (error) {
            console.error('Load bonuses status error:', error);
            throw error;
        }
    }

    /**
     * –û—Ç—Ä–∏–º–∞—Ç–∏ —â–æ–¥–µ–Ω–Ω–∏–π –±–æ–Ω—É—Å
     */
    async claimDailyBonus() {
        try {
            Utils.showLoader(true);

            const response = await api.post('/bonuses/daily/claim');

            if (response.success) {
                // –û–Ω–æ–≤–ª—é—î–º–æ –¥–∞–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
                if (auth.user) {
                    auth.user.balance = response.data.new_balance;
                    auth.user.daily_streak = response.data.streak_day;
                    auth.user.free_spins_today = response.data.free_spins;
                }

                // –û–Ω–æ–≤–ª—é—î–º–æ —Å—Ç–∞—Ç—É—Å
                this.dailyStatus.can_claim = false;
                this.dailyStatus.current_streak = response.data.streak_day;

                // –ü–æ–∫–∞–∑—É—î–º–æ –∞–Ω—ñ–º–∞—Ü—ñ—é
                this.showBonusAnimation(response.data.bonus_amount);

                // Haptic feedback
                auth.hapticFeedback('notification', 'success');

                Utils.showNotification(response.message, 'success');

                return response.data;
            }

        } catch (error) {
            console.error('Claim daily bonus error:', error);
            Utils.showNotification(error.message || '–ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –±–æ–Ω—É—Å–∞', 'error');
            throw error;
        } finally {
            Utils.showLoader(false);
        }
    }

    /**
     * –ö—Ä—É—Ç–∏—Ç–∏ –∫–æ–ª–µ—Å–æ —Ñ–æ—Ä—Ç—É–Ω–∏
     */
    async spinWheel(isFree = true) {
        try {
            // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –º–æ–∂–ª–∏–≤—ñ—Å—Ç—å –∫—Ä—É—Ç–∏—Ç–∏
            if (isFree && this.wheelStatus.free_spins_available <= 0) {
                Utils.showNotification('–ù–µ–º–∞—î –±–µ–∑–∫–æ—à—Ç–æ–≤–Ω–∏—Ö —Å–ø—Ä–æ–±–æ–∫', 'warning');
                return null;
            }

            if (!isFree && auth.user.balance < this.wheelConfig.spin_cost) {
                Utils.showNotification('–ù–µ–¥–æ—Å—Ç–∞—Ç–Ω—å–æ –±–æ–Ω—É—Å—ñ–≤', 'warning');
                return null;
            }

            const response = await api.post('/bonuses/wheel/spin', { is_free: isFree });

            if (response.success) {
                // –û–Ω–æ–≤–ª—é—î–º–æ –±–∞–ª–∞–Ω—Å —Ç–∞ —Å–ø—ñ–Ω–∏
                if (auth.user) {
                    auth.user.balance = response.data.new_balance;
                    auth.user.free_spins_today = response.data.free_spins_left;
                }

                // –û–Ω–æ–≤–ª—é—î–º–æ —Å—Ç–∞—Ç—É—Å
                this.wheelStatus.free_spins_available = response.data.free_spins_left;
                this.wheelStatus.user_balance = response.data.new_balance;

                // Haptic feedback
                if (response.data.is_jackpot) {
                    auth.hapticFeedback('notification', 'success');
                } else if (response.data.prize > 0) {
                    auth.hapticFeedback('impact', 'medium');
                } else {
                    auth.hapticFeedback('impact', 'light');
                }

                return response.data;
            }

        } catch (error) {
            console.error('Spin wheel error:', error);
            Utils.showNotification(error.message || '–ü–æ–º–∏–ª–∫–∞ –ø—Ä–æ–∫—Ä—É—Ç–∫–∏ –∫–æ–ª–µ—Å–∞', 'error');
            throw error;
        }
    }

    /**
     * –û—Ç—Ä–∏–º–∞—Ç–∏ —ñ—Å—Ç–æ—Ä—ñ—é –∫–æ–ª–µ—Å–∞
     */
    async getWheelHistory(limit = 10) {
        try {
            return await api.get('/bonuses/wheel/history', { limit });
        } catch (error) {
            console.error('Get wheel history error:', error);
            throw error;
        }
    }

    /**
     * –û—Ç—Ä–∏–º–∞—Ç–∏ –ª—ñ–¥–µ—Ä–±–æ—Ä–¥ –∫–æ–ª–µ—Å–∞
     */
    async getWheelLeaderboard(limit = 10) {
        try {
            return await api.get('/bonuses/wheel/leaderboard', { limit });
        } catch (error) {
            console.error('Get leaderboard error:', error);
            throw error;
        }
    }

    /**
     * –ü–æ–∫–∞–∑–∞—Ç–∏ –∞–Ω—ñ–º–∞—Ü—ñ—é –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –±–æ–Ω—É—Å–∞
     */
    showBonusAnimation(amount) {
        // –°—Ç–≤–æ—Ä—é—î–º–æ –µ–ª–µ–º–µ–Ω—Ç –¥–ª—è –∞–Ω—ñ–º–∞—Ü—ñ—ó
        const animation = document.createElement('div');
        animation.className = 'bonus-animation fixed top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 z-50';
        animation.innerHTML = `
            <div class="bg-green-500 text-white text-4xl font-bold px-8 py-6 rounded-2xl shadow-2xl animate-bounce">
                +${amount} üéÅ
            </div>
        `;

        document.body.appendChild(animation);

        // –í–∏–¥–∞–ª—è—î–º–æ —á–µ—Ä–µ–∑ 2 —Å–µ–∫—É–Ω–¥–∏
        setTimeout(() => {
            animation.classList.add('opacity-0', 'transition-opacity', 'duration-500');
            setTimeout(() => animation.remove(), 500);
        }, 2000);
    }

    /**
     * –°—Ç–≤–æ—Ä–∏—Ç–∏ HTML –¥–ª—è —â–æ–¥–µ–Ω–Ω–æ–≥–æ –±–æ–Ω—É—Å–∞
     */
    createDailyBonusHTML() {
        if (!this.dailyStatus) {
            return '<div class="text-center">–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è...</div>';
        }

        const streakDays = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];
        const currentStreak = this.dailyStatus.current_streak;
        const canClaim = this.dailyStatus.can_claim;

        return `
            <div class="daily-bonus-container">
                <h3 class="text-2xl font-bold mb-4 dark:text-white">üéÅ –©–æ–¥–µ–Ω–Ω–∏–π –±–æ–Ω—É—Å</h3>

                <!-- –°—Ç—Ä—ñ–∫ –ø—Ä–æ–≥—Ä–µ—Å -->
                <div class="streak-progress mb-6">
                    <div class="flex justify-between mb-2">
                        <span class="text-sm text-gray-600 dark:text-gray-400">–î–µ–Ω—å ${currentStreak}</span>
                        <span class="text-sm text-gray-600 dark:text-gray-400">–°—Ç—Ä—ñ–∫</span>
                    </div>

                    <div class="flex gap-1">
                        ${streakDays.map(day => `
                            <div class="flex-1 text-center">
                                <div class="day-box ${day <= currentStreak ? 'completed' : ''} ${day === currentStreak + 1 && canClaim ? 'next' : ''}
                                     bg-gray-200 dark:bg-gray-700 rounded p-2 mb-1
                                     ${day <= currentStreak ? 'bg-green-500 text-white' : ''}
                                     ${day === currentStreak + 1 && canClaim ? 'bg-blue-500 text-white animate-pulse' : ''}">
                                    <div class="text-xs">–î–µ–Ω—å</div>
                                    <div class="font-bold">${day}</div>
                                </div>
                                <div class="text-xs dark:text-gray-400">
                                    ${this.dailyStatus.streak_bonuses[day]}üéÅ
                                </div>
                            </div>
                        `).join('')}
                    </div>
                </div>

                <!-- –ö–Ω–æ–ø–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è -->
                <div class="text-center">
                    ${canClaim ? `
                        <button onclick="bonuses.claimDailyBonus()"
                                class="bg-green-500 hover:bg-green-600 text-white px-8 py-4 rounded-xl font-bold text-lg
                                       transform hover:scale-105 transition-all shadow-lg">
                            <span class="text-2xl">üéÅ</span>
                            –û—Ç—Ä–∏–º–∞—Ç–∏ ${this.dailyStatus.next_bonus_amount} –±–æ–Ω—É—Å—ñ–≤
                        </button>
                    ` : `
                        <div class="text-gray-500 dark:text-gray-400">
                            <div class="text-2xl mb-2">‚è∞</div>
                            <p>–ù–∞—Å—Ç—É–ø–Ω–∏–π –±–æ–Ω—É—Å –±—É–¥–µ –¥–æ—Å—Ç—É–ø–Ω–∏–π –∑–∞–≤—Ç—Ä–∞</p>
                            <p class="text-sm mt-2">–û—Å—Ç–∞–Ω–Ω—ñ–π –æ—Ç—Ä–∏–º–∞–Ω–∏–π: ${Utils.formatDate(this.dailyStatus.last_claimed)}</p>
                        </div>
                    `}
                </div>

                <!-- –Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ —Å—Ç—Ä—ñ–∫ -->
                <div class="mt-6 p-4 bg-blue-50 dark:bg-blue-900 rounded-lg">
                    <p class="text-sm text-blue-800 dark:text-blue-200">
                        üí° –ü—ñ–¥–∫–∞–∑–∫–∞: –ù–µ –ø—Ä–æ–ø—É—Å–∫–∞–π—Ç–µ –¥–Ω—ñ, —â–æ–± –æ—Ç—Ä–∏–º—É–≤–∞—Ç–∏ –±—ñ–ª—å—à–µ –±–æ–Ω—É—Å—ñ–≤!
                        –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∏–π –±–æ–Ω—É—Å –Ω–∞ 10-–π –¥–µ–Ω—å - 10 –±–æ–Ω—É—Å—ñ–≤ —â–æ–¥–Ω—è!
                    </p>
                </div>
            </div>
        `;
    }

    /**
     * –°—Ç–≤–æ—Ä–∏—Ç–∏ HTML –¥–ª—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
     */
    createStatisticsHTML() {
        if (!this.statistics) {
            return '<div class="text-center">–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è...</div>';
        }

        const stats = this.statistics;

        return `
            <div class="bonus-statistics">
                <h3 class="text-2xl font-bold mb-6 dark:text-white">üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–æ–Ω—É—Å—ñ–≤</h3>

                <!-- –û—Å–Ω–æ–≤–Ω—ñ –ø–æ–∫–∞–∑–Ω–∏–∫–∏ -->
                <div class="grid grid-cols-2 md:grid-cols-4 gap-4 mb-6">
                    <div class="stat-card bg-white dark:bg-gray-800 p-4 rounded-lg text-center">
                        <div class="text-3xl font-bold text-blue-600 dark:text-blue-400">
                            ${stats.current_balance}
                        </div>
                        <div class="text-sm text-gray-600 dark:text-gray-400">–ü–æ—Ç–æ—á–Ω–∏–π –±–∞–ª–∞–Ω—Å</div>
                    </div>

                    <div class="stat-card bg-white dark:bg-gray-800 p-4 rounded-lg text-center">
                        <div class="text-3xl font-bold text-green-600 dark:text-green-400">
                            ${stats.total_earned}
                        </div>
                        <div class="text-sm text-gray-600 dark:text-gray-400">–í—Å—å–æ–≥–æ –∑–∞—Ä–æ–±–ª–µ–Ω–æ</div>
                    </div>

                    <div class="stat-card bg-white dark:bg-gray-800 p-4 rounded-lg text-center">
                        <div class="text-3xl font-bold text-purple-600 dark:text-purple-400">
                            ${stats.daily_bonuses.current_streak}
                        </div>
                        <div class="text-sm text-gray-600 dark:text-gray-400">–ü–æ—Ç–æ—á–Ω–∏–π —Å—Ç—Ä—ñ–∫</div>
                    </div>

                    <div class="stat-card bg-white dark:bg-gray-800 p-4 rounded-lg text-center">
                        <div class="text-3xl font-bold text-yellow-600 dark:text-yellow-400">
                            ${stats.wheel.jackpots}
                        </div>
                        <div class="text-sm text-gray-600 dark:text-gray-400">–î–∂–µ–∫–ø–æ—Ç–∏</div>
                    </div>
                </div>

                <!-- –î–µ—Ç–∞–ª—å–Ω–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ -->
                <div class="grid md:grid-cols-3 gap-6">
                    <!-- –©–æ–¥–µ–Ω–Ω—ñ –±–æ–Ω—É—Å–∏ -->
                    <div class="bg-white dark:bg-gray-800 p-4 rounded-lg">
                        <h4 class="font-bold mb-3 dark:text-white">üéÅ –©–æ–¥–µ–Ω–Ω—ñ –±–æ–Ω—É—Å–∏</h4>
                        <div class="space-y-2 text-sm">
                            <div class="flex justify-between">
                                <span class="text-gray-600 dark:text-gray-400">–û—Ç—Ä–∏–º–∞–Ω–æ —Ä–∞–∑—ñ–≤:</span>
                                <span class="font-medium dark:text-white">${stats.daily_bonuses.total_claimed}</span>
                            </div>
                            <div class="flex justify-between">
                                <span class="text-gray-600 dark:text-gray-400">–í—Å—å–æ–≥–æ –±–æ–Ω—É—Å—ñ–≤:</span>
                                <span class="font-medium dark:text-white">${stats.daily_bonuses.total_received}</span>
                            </div>
                            <div class="flex justify-between">
                                <span class="text-gray-600 dark:text-gray-400">–ú–∞–∫—Å. —Å—Ç—Ä—ñ–∫:</span>
                                <span class="font-medium dark:text-white">${stats.daily_bonuses.max_streak} –¥–Ω—ñ–≤</span>
                            </div>
                        </div>
                    </div>

                    <!-- –ö–æ–ª–µ—Å–æ —Ñ–æ—Ä—Ç—É–Ω–∏ -->
                    <div class="bg-white dark:bg-gray-800 p-4 rounded-lg">
                        <h4 class="font-bold mb-3 dark:text-white">üé∞ –ö–æ–ª–µ—Å–æ —Ñ–æ—Ä—Ç—É–Ω–∏</h4>
                        <div class="space-y-2 text-sm">
                            <div class="flex justify-between">
                                <span class="text-gray-600 dark:text-gray-400">–ü—Ä–æ–∫—Ä—É—á–µ–Ω–æ:</span>
                                <span class="font-medium dark:text-white">${stats.wheel.total_spins}</span>
                            </div>
                            <div class="flex justify-between">
                                <span class="text-gray-600 dark:text-gray-400">–í–∏–≥—Ä–∞–Ω–æ:</span>
                                <span class="font-medium dark:text-white">${stats.wheel.total_won}</span>
                            </div>
                            <div class="flex justify-between">
                                <span class="text-gray-600 dark:text-gray-400">% –≤–∏–≥—Ä–∞—à—ñ–≤:</span>
                                <span class="font-medium dark:text-white">${stats.wheel.win_rate.toFixed(1)}%</span>
                            </div>
                            <div class="flex justify-between">
                                <span class="text-gray-600 dark:text-gray-400">–í–∏—Ç—Ä–∞—á–µ–Ω–æ:</span>
                                <span class="font-medium dark:text-white">${stats.wheel.bonuses_spent}</span>
                            </div>
                        </div>
                    </div>

                    <!-- –†–µ—Ñ–µ—Ä–∞–ª–∏ -->
                    <div class="bg-white dark:bg-gray-800 p-4 rounded-lg">
                        <h4 class="font-bold mb-3 dark:text-white">ü§ù –†–µ—Ñ–µ—Ä–∞–ª–∏</h4>
                        <div class="space-y-2 text-sm">
                            <div class="flex justify-between">
                                <span class="text-gray-600 dark:text-gray-400">–ó–∞—Ä–æ–±–ª–µ–Ω–æ:</span>
                                <span class="font-medium dark:text-white">${stats.referrals.total_earned}</span>
                            </div>
                            <div class="mb-3"></div>
                            <button onclick="app.showReferralCode('${stats.referrals.referral_code}')"
                                    class="w-full bg-blue-500 hover:bg-blue-600 text-white px-3 py-2 rounded text-sm">
                                –ü–æ–∫–∞–∑–∞—Ç–∏ —Ä–µ—Ñ. –∫–æ–¥
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        `;
    }
}

// –°—Ç–≤–æ—Ä—é—î–º–æ —Ç–∞ –µ–∫—Å–ø–æ—Ä—Ç—É—î–º–æ —î–¥–∏–Ω–∏–π –µ–∫–∑–µ–º–ø–ª—è—Ä
const bonuses = new BonusesModule();

// –ï–∫—Å–ø–æ—Ä—Ç—É—î–º–æ –¥–ª—è –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –≤ —ñ–Ω—à–∏—Ö –º–æ–¥—É–ª—è—Ö
window.bonuses = bonuses;

export default bonuses;